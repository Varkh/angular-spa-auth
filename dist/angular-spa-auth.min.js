"use strict";!function(){var e={UNAUTHORIZED_REDIRECT_TO_LOGIN:"Unauthorized: redirecting to the login page",MISSING_CURRENT_USER_ENDPOINT:"Endpoint for current user is not specified",MISSING_LOGIN_ENDPOINT:"Login endpoint is not specified",SUCCESS_AUTH:"Successfully authenticated",ERROR_OCCURS:"Error occurs",CANNOT_OVERRIDE_CORE:"You cannot override core service methods. Please use handlers to customize your auth process: "};angular.module("angular-spa-auth",["ngRoute"]).run(["$rootScope","$location","$timeout","AuthService",function(t,n,r,o){t.$on("$routeChangeStart",function(t,u){o.isAuthenticated()?console.info("Loading "+n.path()):u.$$route&&!o.isPublic(u.$$route.originalPath)&&(o.saveTargetRoute(),t.preventDefault(),r(function(){console.info(e.UNAUTHORIZED_REDIRECT_TO_LOGIN),o.openLogin()}))})}]).service("AuthService",["$rootScope","$q","$http","$location",function(t,n,r,o){function u(e){g.verbose&&console.info(e)}function i(e){o.path(e)}function s(){return g.endpoints.isAuthenticated?r.get(g.endpoints.isAuthenticated).then(function(e){return u("isAuthenticated: "+e.data),e.data?e.data:n.reject(e.data)}):n(function(e,t){e(!0)})}function c(){s().then(function(){l.refreshCurrentUser().then(g.handlers.success,g.handlers.error)["catch"](a)})}function a(){i(g.uiRoutes.login)}var g={verbose:!1,publicUrls:["/login","/home"],endpoints:{isAuthenticated:null,currentUser:null,logout:"/logout",login:"/login"},uiRoutes:{login:"/login",home:"/home",target:null},handlers:{getHomePage:function(e){return g.uiRoutes.home},getUser:function(){if(!g.endpoints.currentUser)throw new Error(e.MISSING_CURRENT_USER_ENDPOINT);return r.get(g.endpoints.currentUser).then(function(e){return u("current user: "+JSON.stringify(e.data)),e.data})},login:function(t){if(!g.endpoints.login)throw new Error(e.MISSING_LOGIN_ENDPOINT);return r.post(g.endpoints.login,t)},success:function(t){u(e.SUCCESS_AUTH)},error:function(t){g.verbose&&console.error(e.ERROR_OCCURS,t)}},mixins:{}},l={isPublic:function(e){return g.publicUrls.some(function(t){return e.indexOf(t)>-1})},saveTargetRoute:function(){g.uiRoutes.target=o.path(),u("Target route is saved: "+g.uiRoutes.target)},openTargetRoute:function(e){g.uiRoutes.target=g.uiRoutes.target||g.handlers.getHomePage(e),i(g.uiRoutes.target),u("Redirected to the target route: "+g.uiRoutes.target),l.clearTargetRoute()},clearTargetRoute:function(){g.uiRoutes.target=null},openLogin:a,openHome:function(){i(g.handlers.getHomePage(t.currentUser))},getCurrentUser:function(){return t.currentUser?t.currentUser:l.refreshCurrentUser()},refreshCurrentUser:function(){return g.handlers.getUser().then(function(e){return t.currentUser=e,l.openTargetRoute(e),e})},isAuthenticated:function(){return!!t.currentUser},logout:function(){r.get(g.endpoints.logout).then(function(){t.currentUser=null,a()})},run:function(t){if(t&&(g=angular.merge(g,t),t.mixins)){for(var n in t.mixins)if(l.hasOwnProperty(n))throw new Error(e.CANNOT_OVERRIDE_CORE+n);angular.merge(l,t.mixins)}c()},login:function(e){g.handlers.login(e).then(l.refreshCurrentUser()).then(g.handlers.success)["catch"](g.handlers.error)}};return l}])}();