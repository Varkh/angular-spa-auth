"use strict";!function(){var e={UNAUTHORIZED_REDIRECT_TO_LOGIN:"Unauthorized: redirecting to the login page",MISSING_CURRENT_USER_ENDPOINT:"Endpoint for current user is not specified",MISSING_LOGIN_ENDPOINT:"Login endpoint is not specified",SUCCESS_AUTH:"Successfully authenticated",ERROR_OCCURS:"Error occurs",CANNOT_OVERRIDE_CORE:"You cannot override core service methods. Please use handlers to customize your auth process"};angular.module("ng-spa-auth",["ngRoute"]).run(["$rootScope","$location","$timeout","AuthService",function(t,n,o,r){t.$on("$routeChangeStart",function(i,u){t.currentUser&&t.currentUser.id?console.info("Loading "+n.path()):u.$$route&&!r.isPublic(u.$$route.originalPath)&&(r.saveTargetRoute(),i.preventDefault(),o(function(){console.info(e.UNAUTHORIZED_REDIRECT_TO_LOGIN),r.goToLogin()}))})}]).service("AuthService",["$rootScope","$q","$http","$location",function(t,n,o,r){function i(e){l.verbose&&console.info(e)}function u(e){r.path(e)}function a(){return l.handlers.getUser().then(function(e){return t.currentUser=e,h.goToTargetRoute(e),e})}function s(){return l.endpoints.isAuthenticated?o.get(l.endpoints.isAuthenticated).then(function(e){return i("isAuthenticated: "+e.data),e.data?e.data:n.reject(e.data)}):n(function(e,t){e(!0)})}function c(){s().then(function(){a().then(l.handlers.success,l.handlers.error)["catch"](g)})}function g(){u(l.uiRoutes.login)}var l={verbose:!1,publicUrls:["/login","/home"],endpoints:{isAuthenticated:null,currentUser:"/api/user/current",logout:"/auth/logout",login:"/auth/login"},uiRoutes:{login:"/login",home:"/home",target:null},handlers:{getDefaultPage:function(e){return l.uiRoutes.home},getUser:function(){if(!l.endpoints.currentUser)throw new Error(e.MISSING_CURRENT_USER_ENDPOINT);return o.get(l.endpoints.currentUser).then(function(e){return i("current user: "+JSON.stringify(e.data)),e.data})},login:function(t){if(!l.endpoints.login)throw new Error(e.MISSING_LOGIN_ENDPOINT);return o({method:"GET",url:l.endpoints.login,params:t})},success:function(t){i(e.SUCCESS_AUTH)},error:function(t){l.verbose&&console.error(e.ERROR_OCCURS,t)}},mixin:{}},h={isPublic:function(e){return l.publicUrls.some(function(t){return e.indexOf(t)>-1})},saveTargetRoute:function(){l.uiRoutes.target=r.path(),i("Target route is saved:  "+l.uiRoutes.target)},goToLogin:g,goToTargetRoute:function(e){l.uiRoutes.target=l.uiRoutes.target||l.handlers.getDefaultPage(e),u(l.uiRoutes.target),i("Redirected to the target route: "+l.uiRoutes.target),h.clearTargetRoute()},clearTargetRoute:function(){l.uiRoutes.target=null},logout:function(){o.get(l.endpoints.logout).then(function(){t.currentUser=null,g()})},run:function(t){if(t&&(l=angular.merge(l,t),t.mixin)){if(t.mixin.login||t.mixin.logout||t.mixin.saveTargetRoute||t.mixin.goToTargetRoute||t.mixin.clearTargetRoute||t.mixin.goToLogin||t.mixin.isPublic)throw new Error(e.CANNOT_OVERRIDE_CORE);angular.merge(h,t.mixin)}c()},login:function(e){l.handlers.login(e).then(a).then(l.handlers.success)["catch"](l.handlers.error)}};return h}])}();